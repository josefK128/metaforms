{"version":3,"names":[],"mappings":"","sources":["components/narrative-component.js"],"sourcesContent":["// * narrative-controller.js\n// * sets model for collection element which initiates\n// * the recursive actions of collection-component and member-component\n//\n// * @dependencies: $scope, $timeout, Models <br>\n//   @param {ng-core} $scope <br>\n//   @param {ng-core} $timeout <br>\n//   @param {services} Models <br>\n//   @ngInject\n// \n// * NOTE: ngInject is used by ngAnnotate to generate a \n//   minification-safe injection annotation such as: \n//   ```function($scope) => ['$scope', function($scope){}]```\n// \n\nangular.module('app').controller('narrative', ($scope, $timeout, Models) => {\n\"use strict\";\n\n  console.log(\"Narrative controller starting\");\n\n  var m,\n      p;\n  \n  // initial set of model for recursive list build\n  $scope.tasks = Models.model('europe'); \n\n  console.log(\"narrative: scope properties:\");\n  for(p in $scope){\n    if($scope.hasOwnProperty(p)){\n      console.log(`scope has property ${p}`);\n    }\n  }\n\n  $scope.$watch('tasks', (val, pval) => {\n    console.log(\"*** narrative: scope.tasks change!\");\n    if(val !== pval){    \n      console.log(`*** narrative: node.collection is:`);\n      console.dir(val);\n    }\n  });\n\n  // test\n  m = JSON.stringify(Models.model('namerica'));\n  $timeout(() => {\n    document.getElementById(\"narrative\").style.background = \"red\";\n    $timeout(() => {\n      document.getElementById(\"model\").setAttribute(\"collection\", m);\n      $scope.tasks = JSON.parse(m);\n    }, 1000);\n  }, 10000);\n\n});\n\n"],"file":"components/narrative-component.js","sourceRoot":"/source/"}